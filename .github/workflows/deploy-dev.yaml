name: deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f ./Dockerfile -t my-app-nextjs .
          docker tag my-app-nextjs:latest ${{ secrets.AWS_ECR_URI }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ECR_URI }}:${{ env.IMAGE_TAG }}

      - name: Setup kubectl, helm and cluster context
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name kubernetes-cluster
          kubectl config current-context

      # - name: Helm install/upgrade chart
      #   env:
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: helm upgrade ellavdim-web ./helm/frontend-web/ -f ./helm/frontend-web/values-dev.yaml --install --namespace lavdim-fiek --create-namespace --set app.image_tag=${{ env.IMAGE_TAG }}
